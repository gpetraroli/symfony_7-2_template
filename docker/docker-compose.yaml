name: ${PROJECT_NAME}

services:
  caddy:
    image: ${PROJECT_NAME}_caddy
    container_name: ${PROJECT_NAME}_caddy
    build:
      context: ../
      dockerfile: docker/Dockerfile
      target: caddy
    depends_on:
      - php
    volumes:
      - ../:/var/www/app

  postgres:
    image: postgres:16.4-alpine3.20
    container_name: ${PROJECT_NAME}_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw

  php:
    image: ${PROJECT_NAME}_php
    container_name: ${PROJECT_NAME}_php
    build:
      context: ../
      dockerfile: docker/Dockerfile
      target: php_dev
    depends_on:
      - postgres
    volumes:
      - ../:/var/www/app

  ###> symfony/mercure-bundle ###
  mercure:
    image: dunglas/mercure
    container_name: ${PROJECT_NAME}_mercure
    environment:
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost/healthz"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - mercure_data:/data
      - mercure_config:/config
###< symfony/mercure-bundle ###

volumes:
  database_data:
  mercure_data:
  mercure_config:
